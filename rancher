#!/bin/bash

BARR="====================================================="

## Outfile for error check
check_file="/tmp/output.err"

## Rancher setting
base_dir="/data/src/rancher_data"
data_dir="$base_dir/mysql"
port="8443"
rancher_image="rancher/server:latest"

## check the sudo command
sudo 2> $check_file
	if [[ `(grep "not found" $check_file)` = "" ]];then
		SUDO="sudo"
	else
		SUDO=""
	fi

rancher_data_dir_check(){
	if [[ ! -d $data_dir ]];then
		$SUDO docker run -d $rancher_image
		echo " Trying to make a new database. "
		echo " Please wait for 4 mins...."
		sleep 240
		tmp_rancher_id=`$SUDO docker ps -a | grep "$rancher_image" | head -1 | awk '{print $1}'`
		$SUDO mkdir -p $base_dir
		$SUDO docker stop $tmp_rancher_id
		$SUDO docker cp $tmp_rancher_id:/var/lib/mysql $base_dir
		$SUDO chown -R 102:105 $data_dir
		$SUDO docker rm $tmp_rancher_id
	else
		$SUDO chown -R 102:105 $data_dir
	fi
}

## check the docker command
$SUDO docker 1> /dev/null 2>  $check_file
	if [[ `($SUDO grep "not found" $check_file)` != "" ]];then
		echo "$BARR"
		echo " You need to install the Docker first !!"
	fi

return_check(){
	Result=`$SUDO grep 'Error' $check_file`
		if [[ $Result != "" ]];then
			cat $check_file
			exit 1;
		fi
	$SUDO rm -f $check_file
}

rancher_start (){
	rancher_data_dir_check
	$SUDO docker run -d -v $data_dir:/var/lib/mysql -p $port:8080  --restart=unless-stopped $rancher_image  2> $check_file
	return_check
	echo "$BARR"
	echo " Rancher server has been started :)"
}


rancher_status (){
	echo "$BARR"
	$SUDO docker ps | head -1
	$SUDO docker ps |grep $rancher_image
}


rancher_stop (){
	Rancher_id=`$SUDO docker ps |grep $rancher_image | awk '{print $1}'`
	$SUDO docker stop $Rancher_id  2> $check_file
	return_check
	echo "$BARR"
	echo " Rancher server has been stopped!!"
	echo " Data directory is -> $data_dir"
	echo " Docker container ID was -> $Rancher_id"
}


	case $1 in
		start )
			rancher_start
			rancher_status
			;;
		status )
			rancher_status
			;;
		stop )
			rancher_stop
			;;
		restart )
			rancher_stop
			rancher_start
			rancher_status
			;;
		*)
			echo "$BARR"
			echo " You can control the rancher as these options [ start / stop / status / restart ]"
	esac
	echo "$BARR"
